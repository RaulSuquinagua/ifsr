{"version":3,"sources":["./src/app/notifications/notifications.page.html","./src/app/notifications/notifications.module.ts","./src/app/notifications/notifications.page.scss","./src/app/notifications/notifications.page.ts"],"names":[],"mappings":"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","file":"notifications-notifications-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Notifications</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class=\\\"ion-padding\\\">\\n        <ion-card>\\n          <ion-item>\\n            <ion-label>\\n              Manage Banners\\n              <form ngNoForm>\\n                <input id=\\\"avatar\\\" style=\\\"display:none\\\" name=\\\"file\\\" type=\\\"file\\\" (change)=\\\"upload()\\\">\\n              </form>\\n            </ion-label>\\n            <ion-button slot=\\\"end\\\" (click)=\\\"chooseFile()\\\">Add Banner</ion-button>\\n          </ion-item>\\n          <ion-row *ngIf=\\\"banners.length != 0\\\">\\n            <ion-col *ngFor=\\\"let b of banners\\\" size=\\\"3\\\">\\n              <img src=\\\"{{b.url}}\\\" style=\\\"height:80px;width:auto\\\" />\\n              <ion-button size=\\\"small\\\" (click)=\\\"deleteBanner(b.key)\\\">Delete</ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card>\\n        <ion-card>\\n          <ion-item>\\n            <ion-label>\\n              Manage Notifications\\n            </ion-label>\\n            <ion-button slot=\\\"end\\\" (click)=\\\"openEditor()\\\">Add New</ion-button>\\n          </ion-item>\\n          <ion-list *ngIf=\\\"notifications.lengh != 0\\\" lines=\\\"none\\\">\\n            <ion-item *ngFor=\\\"let n of notifications\\\">\\n              <ion-label>\\n                <ion-text>\\n                  <h3>{{n.title}}</h3>\\n                  <p>{{n.message}}</p>\\n                </ion-text>\\n              </ion-label>\\n              <ion-button slot=\\\"end\\\" fill=\\\"outline\\\" (click)=\\\"delete(n.key)\\\">Delete</ion-button>\\n            </ion-item>\\n          </ion-list>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col size=\\\"4\\\" class=\\\"ion-padding\\\" *ngIf=\\\"isShow\\\">\\n        <ion-card>\\n          <ion-list lines=\\\"none\\\">\\n            <ion-item>\\n              <ion-button (click)=\\\"closeEditor()\\\" fill=\\\"clear\\\" slot=\\\"end\\\">\\n                <ion-icon name=\\\"close-circle\\\"></ion-icon>\\n              </ion-button>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Name</ion-label>\\n              <ion-input type=\\\"text\\\" [(ngModel)]=\\\"notification.title\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">Message</ion-label>\\n              <ion-textarea type=\\\"text\\\" [(ngModel)]=\\\"notification.message\\\"></ion-textarea>\\n            </ion-item>\\n            <ion-radio-group [(ngModel)]=\\\"notification.for\\\">\\n              <ion-item>\\n                <ion-label>Users</ion-label>\\n                <ion-radio value=\\\"users\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Drivers</ion-label>\\n                <ion-radio value=\\\"drivers\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Both</ion-label>\\n                <ion-radio value=\\\"all\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-list>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button expand=\\\"block\\\" *ngIf=\\\"!isEdit\\\" (click)=\\\"add()\\\">Add</ion-button>\\n          </div>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPage } from './notifications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9ucy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../services/common.service';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n\n  isEdit = false;\n  notification: any = {};\n  notifications: any = [];\n  banners: any = [];\n  banner: any = {};\n  isShow = false;\n\n  constructor(\n    private common: CommonService,\n    private afDb: AngularFireDatabase,\n    private afStorage: AngularFireStorage,\n  ) { }\n\n  ngOnInit() {\n    this.fetchNotifications();\n  }\n\n  fetchNotifications() {\n    this.common.showLoader();\n    this.afDb.list('notifications/').snapshotChanges().subscribe((res: any) => {\n      this.notifications = [];\n      res.forEach(c => this.notifications.push({ key: c.key, ...c.payload.val() }));\n      this.common.hideLoader();\n      this.fetchBanners()\n    })\n  }\n\n  fetchBanners() {\n    this.common.showLoader();\n    this.afDb.list('banners/').snapshotChanges().subscribe((res: any) => {\n      this.banners = [];\n      res.forEach(c => this.banners.push({ key: c.key, ...c.payload.val() }));\n      this.common.hideLoader();\n    })\n  }\n\n  chooseFile() {\n    document.getElementById('avatar').click();\n  }\n\n  upload() {\n    this.common.showLoader();\n    // Create a root reference\n    for (let selectedFile of [(<HTMLInputElement>document.getElementById('avatar')).files[0]]) {\n      let path = '/banners/' + Date.now() + `_${selectedFile.name}`;\n      let ref = this.afStorage.ref(path)\n      ref.put(selectedFile).then(() => {\n        ref.getDownloadURL().subscribe(url => this.addBanner(url));\n        this.common.hideLoader();\n      }).catch(err => {\n        console.log(err);\n        this.common.hideLoader();\n      });\n\n    }\n  }\n\n  addBanner(url) {\n    this.common.showLoader();\n    this.afDb.list('banners/').push({ url: url }).then(res => {\n      this.common.hideLoader();\n      this.common.showToast(\"Added Successfully\");\n    }).catch(e => {\n      this.common.hideLoader();\n      this.common.showToast(\"something went wrong\");\n    })\n  }\n\n  deleteBanner(key) {\n    this.common.showLoader();\n    this.afDb.object('banners/' + key).remove().then(res => {\n      this.common.hideLoader();\n      this.common.showToast(\"Deleted Successfully\");\n    }).catch(e => {\n      this.common.hideLoader();\n      this.common.showToast(\"something went wrong\");\n    })\n  }\n\n  openEditor() {\n    this.reset();\n    this.isShow = true;\n  }\n\n  closeEditor() {\n    this.reset();\n    this.isShow = false;\n  }\n\n  reset() {\n    this.notification = {};\n    this.isShow = false;\n  }\n\n  add() {\n    this.common.showLoader();\n    this.afDb.list('notifications/').push(this.notification).then(res => {\n      this.common.hideLoader();\n      this.common.showToast(\"Added Successfully\");\n      this.reset();\n    }).catch(e => {\n      this.common.hideLoader();\n      this.common.showToast(\"something went wrong\");\n    })\n  }\n\n  delete(key) {\n    this.common.showLoader();\n    this.afDb.object('notifications/' + key).remove().then(res => {\n      this.common.hideLoader();\n      this.common.showToast(\"Deleted Successfully\");\n      this.reset()\n    }).catch(e => {\n      this.common.hideLoader();\n      this.common.showToast(\"something went wrong\");\n    })\n  }\n\n}\n"],"sourceRoot":""}