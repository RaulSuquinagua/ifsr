{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8mBAA8mB,uBAAuB,mKAAmK,0BAA0B,sPAAsP,wBAAwB,qJAAqJ,uBAAuB,+BAA+B,YAAY,yGAAyG,oCAAoC,wC;;;;;;;;;;;;;;;;;;;;;;;ACA34C;AACM;AACF;AACU;AAEV;AAEJ;AACa;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAI;AAAnB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,mEAAe;YACf,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAI;AAAJ;;;;;;;;;;;;AC3B5B,oCAAoC,gCAAgC,GAAG,6CAA6C,mhB;;;;;;;;;;;;;;;;;;;;ACAlE;AACG;AACM;AACJ;AAOvD,IAAa,SAAS,GAAtB,MAAa,SAAS;IAIpB,YACU,MAAuB,EACvB,MAAqB,EACrB,SAA2B;QAF3B,WAAM,GAAN,MAAM,CAAiB;QACvB,WAAM,GAAN,MAAM,CAAe;QACrB,cAAS,GAAT,SAAS,CAAkB;QANrC,SAAI,GAAQ,IAAI,CAAC;QAEjB,aAAQ,GAAQ,EAAE,CAAC;IAKf,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QACzB,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACvF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QAC3B,CAAC,CACA,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC;CACF;;YA5BmB,kEAAe;YACf,sEAAa;YACV,oEAAgB;;AAP1B,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,uIAAgC;;KAEjC,CAAC;2EAMkB,kEAAe;QACf,sEAAa;QACV,oEAAgB;GAP1B,SAAS,CAiCrB;AAjCqB","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-select (ionChange)=\\\"changeLang()\\\" [(ngModel)]=\\\"lang\\\">\\n        <ion-select-option value=\\\"en\\\">English</ion-select-option>\\n        <ion-select-option value=\\\"ar\\\">عربى</ion-select-option>\\n      </ion-select>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"login-header\\\">\\n    <img src=\\\"./assets/images/icon.png\\\" />\\n    <h3>App Name</h3>\\n    <p>App short text</p>\\n  </div>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">{{ 'EMAIL' | translate }}</ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"userInfo.email\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">{{ 'PASSWORD' | translate }}</ion-label>\\n      <ion-input type=\\\"password\\\" [(ngModel)]=\\\"userInfo.password\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-button color=\\\"secondary\\\" slot=\\\"end\\\" size=\\\"small\\\" fill=\\\"clear\\\" routerLink=\\\"/forget\\\">\\n        {{ 'FORGET' | translate }}\\n      </ion-button>\\n    </ion-item>\\n  </ion-list>\\n  <div class=\\\"ion-padding\\\">\\n    <ion-button expand=\\\"block\\\" (click)=\\\"login()\\\">\\n      {{ 'LOGIN' | translate }}\\n    </ion-button>\\n    &nbsp;\\n    &nbsp;\\n    <ion-button color=\\\"secondary\\\" expand=\\\"block\\\" fill=\\\"clear\\\" routerLink=\\\"/register\\\">\\n      {{ 'CREATE_NEW_ACCOUNT' | translate }}</ion-button>\\n  </div>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule { }\n","module.exports = \".header-md:after {\\n  background: none !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxyYXVsc1xcT25lRHJpdmVcXERlc2t0b3BcXHZlcnNpb24gM1xcaWZzci0xLjAuMVxcZHJpdmVyL3NyY1xcYXBwXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRlci1tZDphZnRlcntcbiAgICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7XG59IiwiLmhlYWRlci1tZDphZnRlciB7XG4gIGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { CommonService } from '../services/common.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  lang: any = 'en';\n\n  userInfo: any = {};\n  constructor(\n    private afAuth: AngularFireAuth,\n    private common: CommonService,\n    private translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.lang = localStorage.getItem('lang');\n  }\n\n  login() {\n    this.common.showLoader();\n    let email = ((this.userInfo.email).toLowerCase().trim());\n    this.afAuth.auth.signInWithEmailAndPassword(email, this.userInfo.password).then((data) => {\n      console.log(data)\n      this.common.hideLoader();\n    }\n    ).catch(err => {\n      console.log(err);\n      this.common.hideLoader();\n      this.common.showToast(err.message);\n    })\n  }\n\n  changeLang() {\n    console.log(this.lang);\n    this.translate.use(this.lang);\n    localStorage.setItem('lang', this.lang);\n  }\n}\n"],"sourceRoot":""}